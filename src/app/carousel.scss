.carousel {
    position: relative;
}

.carousel-scroll-container {
    /* Enable horizontal scrolling */
    overflow-x: auto;
    /* Enable horizontal scroll snap */
    scroll-snap-type: x proximity;
    /* Smoothly snap from one focal point to another */
    scroll-behavior: smooth;

    // Modifier classes for a full width slideshow
    .slideshow & {
        /* Mandatory scroll snap is more consistent for a slideshow */
        scroll-snap-type: x mandatory;
    }

    &.with-js {
        scroll-snap-type: none;
    }

    & .center-point {
        position: absolute;
        top: 0;
        left: 50%;
        width: 1px;
        height: 100%;
        background-color: green;
        z-index: 99;
    }
}

.carousel-items {
    /* Arrange media horizontally */
    display: flex;
    // gap: 1rem;
}

.carousel-slide {
    position: relative;
    /* Limit the height of each media item */
    height: 300px;
    /* Prevent media from shrinking */
    flex-shrink: 0;
    /* The focal point for each item is the center */
    scroll-snap-align: center;

    &:first-of-type {
        /* Allow users to fully scroll to the start */
        scroll-snap-align: start;
    }

    &:last-of-type {
        /* Allow users to fully scroll to the end */
        scroll-snap-align: end;
    }

    // .with-js & {
    //     /* Disable scroll snap */
    //     scroll-snap-align: none;
    // }
    &.focal-image::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        background-color: hsla(0, 100%, 50%, 0.25);
        z-index: 1;
        width: 100%;
        height: 100%;
        pointer-events: none;
    }
    & .center-point {
        position: absolute;
        top: 0;
        left: 50%;
        width: 1px;
        height: 100%;
        background-color: blue;
        z-index: 99;
    }
    /* Target direct descendant too in case the images have a wrapper parent */
    & figure,
    & .carousel-item-wrapper,
    & > * {
        position: relative;
        & figcaption {
            color: white;
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            padding: 0.25rem;
            text-align: center;
            background-color: hsl(0deg 0% 0% / 75%);
            font-size: small;
        }
        & img {
            /* Remove line height (typically done in a CSS reset) */
            display: block;
            /* Responsive width based on aspect ratio */
            width: auto;
        }
    }
    & > *,
    & picture,
    & figure,
    & img {
        height: 100%;
    }

    // Modifier classes for a full width slideshow
    .slideshow & {
        /* Or whatever value works for you */
        height: 300px;
        /* Full-width slides */
        width: 100%;
    }

    .slideshow & > *,
    .slideshow & picture,
    .slideshow & figure,
    .slideshow & img {
        /* Cover the slide */
        width: 100%;
        height: 100%;
    }
    .slideshow & img {
        /* Crop and center overflowing images */
        object-fit: cover;
        object-position: center;
    }
}

// .carousel-controls {
//     display: none;

//     .js & {
//         display: flex;
//         justify-content: space-between;
//         align-items: center;
//         position: absolute;
//         top: 0;
//         padding: 1rem;
//         background-color: hsl(0deg 0% 100% / 75%);
//         backdrop-filter: blur(0.25rem);
//         z-index: 1;
//     }
// }

.carousel-control {
    --offset-x: 0;
    cursor: pointer;
    /* Anchor the controls relative to the outer wrapper */
    position: absolute;
    /* Center the controls vertically */
    top: 50%;
    transform: translateY(-50%);
}
/* Don't allow icons to be event targets */
.carousel-control * {
    pointer-events: none;
}
.carousel-control[data-direction="start"] {
    /* Same as left in LTR and right in RTL */
    inset-inline-start: var(--offset-x);
    &[aria-disabled="true"] {
        filter: opacity(0.5);
        cursor: not-allowed;
    }
}
.carousel-control[data-direction="end"] {
    /* Same as right in LTR and left in RTL */
    inset-inline-end: var(--offset-x);

    &[aria-disabled="true"] {
        filter: opacity(0.5);
        cursor: not-allowed;
    }
}
